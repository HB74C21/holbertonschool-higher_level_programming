#4-print_square.py

>>> print_square = __import__('4-print_square').print_square

# Test with size equal to 4
>>> print_square(4)
####
####
####
####

# Test with size equal to 10
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

#Test where size is a negativ integer
>>> print_square(-1)
Traceback (most recent call last):
ValueError: size must be >= 0

#Test where size is not an integer
>>> print_square("e")
Traceback (most recent call last):
TypeError: size must be an integer

#Test where size is a float and a negativ integer
>>> print_square(-2.5)
Traceback (most recent call last):
TypeError: size must be an integer

#Test with the None argument:
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

#Test with no size argument:
>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'

# Test with size equal to 0
>>> print_square(0)

# Test with size equal to 1
>>> print_square(1)
#

# Test with size equal to -1
>>> print_square(-1)
Traceback (most recent call last):
ValueError: size must be >= 0
