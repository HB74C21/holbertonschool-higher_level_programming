>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

This test checks if the function correctly divides each element of a matrix by a given divisor.

# Test 1: Valid division
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test 2: Division by zero
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Test 3: Invalid matrix (incorrect type)
>>> matrix = "invalid"
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 4: Invalid matrix (invalid element)
>>> matrix = [
...     [1, 2, 3],
...     [4, "invalid", 6]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test 5: Invalid matrix (different row sizes)
>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
